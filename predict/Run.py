import sys
from PyQt5.QtWidgets import QApplication, QMainWindow
from PyQt5.QtGui import QIcon, QFont
import Main_UI
import list_family
import show_pic
import cv2
from PyQt5 import QtGui, QtWidgets

class Ui_pic(QMainWindow, show_pic.Ui_MainWindow):
    def __init__(self, pic_dir, score, predict):
        super(Ui_pic, self).__init__()
        self.setupUi(self)
        self.setWindowIcon(QIcon('./image/icon.ico'))

        # print(type(score))
        # print(score)

        self.pic_filename = pic_dir
        self.predict = predict
        self.score = score
        #print(type(self.score))
        self.set_pic()

        self.action_2.triggered.connect(self.pic_event)
        self.action.triggered.connect(self.main_event)
        self.action_3.triggered.connect(self.list_event)

    def set_pic(self):
        if self.pic_filename:
            todir = './test_file/pic'
            img_path = todir + '/' + self.pic_filename
            image = cv2.imread(img_path, cv2.IMREAD_GRAYSCALE)
            image = cv2.resize(image, (250, 195))

            frame = QtGui.QImage(image, 250, 195, QtGui.QImage.Format_Indexed8)
            pix = QtGui.QPixmap.fromImage(frame)
            self.item = QtWidgets.QGraphicsPixmapItem(pix)  # 创建像素图元
            self.scene = QtWidgets.QGraphicsScene()  # 创建场景
            self.scene.addItem(self.item)
            self.graphicsView.setScene(self.scene)  # 将场景添加至视图

        if self.score:
            pic_dir = './test_file/pic'
            wdir = './test_file/deal_pic'

            self.predict += 1

            similar_dilr = './image/' + str(self.predict) + '/' + '1.jpg'
            image = cv2.imread(similar_dilr, cv2.IMREAD_GRAYSCALE)
            image = cv2.resize(image, (250, 195))

            frame = QtGui.QImage(image, 250, 195, QtGui.QImage.Format_Indexed8)
            pix = QtGui.QPixmap.fromImage(frame)
            self.item_2 = QtWidgets.QGraphicsPixmapItem(pix)  # 创建像素图元
            self.scene_2 = QtWidgets.QGraphicsScene()  # 创建场景
            self.scene_2.addItem(self.item_2)
            self.graphicsView_2.setScene(self.scene_2)  # 将场景添加至视图

            if self.predict == 9:
                fd = 1
            else:
                fd = self.predict + 1

            diffient_dilr_1 = './image/' + str(fd) + '/' + '1.jpg'
            image = cv2.imread(diffient_dilr_1, cv2.IMREAD_GRAYSCALE)
            image = cv2.resize(image, (250, 195))

            frame = QtGui.QImage(image, 250, 195, QtGui.QImage.Format_Indexed8)
            pix = QtGui.QPixmap.fromImage(frame)
            self.item_3 = QtWidgets.QGraphicsPixmapItem(pix)  # 创建像素图元
            self.scene_3 = QtWidgets.QGraphicsScene()  # 创建场景
            self.scene_3.addItem(self.item_3)
            self.graphicsView_3.setScene(self.scene_3)  # 将场景添加至视图

            if self.predict == 1:
                fd = 9
            else:
                fd = self.predict - 1

            diffient_dilr_2 = './image/' + str(fd) + '/' + '1.jpg'
            image = cv2.imread(diffient_dilr_2, cv2.IMREAD_GRAYSCALE)
            image = cv2.resize(image, (250, 195))

            frame = QtGui.QImage(image, 250, 195, QtGui.QImage.Format_Indexed8)
            pix = QtGui.QPixmap.fromImage(frame)
            self.item_4 = QtWidgets.QGraphicsPixmapItem(pix)  # 创建像素图元
            self.scene_4 = QtWidgets.QGraphicsScene()  # 创建场景
            self.scene_4.addItem(self.item_4)
            self.graphicsView_4.setScene(self.scene_4)  # 将场景添加至视图

    def list_event(self):
        self.hide()
        self.dia = Ui_list()
        self.dia.show()

    def pic_event(self):
        self.hide()
        self.dia = Ui_pic()
        self.dia.show()

    def main_event(self):
        self.hide()
        self.dia = Ui_Main()
        self.dia.show()


class Ui_list(QMainWindow, list_family.Ui_MainWindow):
    def __init__(self):
        super(Ui_list, self).__init__()
        self.setupUi(self)
        self.setWindowIcon(QIcon('./image/icon.ico'))

        self.action_2.triggered.connect(self.pic_event)
        self.action.triggered.connect(self.main_event)
        self.action_3.triggered.connect(self.list_event)

    def list_event(self):
        self.hide()
        self.dia = Ui_list()
        self.dia.show()

    def pic_event(self):
        self.hide()
        self.dia = Ui_pic()
        self.dia.show()

    def main_event(self):
        self.hide()
        self.dia = Ui_Main()
        self.dia.show()

class Ui_Main(QMainWindow, Main_UI.Ui_MainWindow):
    def __init__(self):
        super(Ui_Main, self).__init__()
        self.setupUi(self)
        self.setWindowIcon(QIcon('./image/icon.ico'))


        self.action_2.triggered.connect(self.pic_event)
        self.action.triggered.connect(self.main_event)
        self.action_3.triggered.connect(self.list_event)

    def list_event(self):
        self.hide()
        self.dia = Ui_list()
        self.dia.show()
    def pic_event(self):
        self.hide()
        self.dia = Ui_pic(self.pic_filename, self.score, self.predict)
        self.dia.show()
    def main_event(self):
        self.hide()
        self.dia = Ui_Main()
        self.dia.show()


if __name__ == '__main__':
    app = QApplication(sys.argv)
    main_show = Ui_Main()
    main_show.show()
    sys.exit(app.exec_())